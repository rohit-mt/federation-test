directive @upper on FIELD_DEFINITION

type Query {
  allSeries: [series!]!
  series(id: ID!): series
}

type series {
  id: ID!
  name: String! @upper
}

extend type User @key(fields: "id") {
  id: ID! @external
  assignedSeries: [series!]!
}

type Mutation {
  assignSeriesToUser(seriesId: String, userId: String): [series!]!
}

### Common testing(below not used anywhere)

interface Error {
  code: ErrorCode!
  message: String!
}

enum ErrorCode {
  UNKNOWN_ERROR
  NETWORK_ERROR
  AUTHENTICATION_ERROR
  SERVER_ERROR
}

type Response implements Error {
  code: ErrorCode!
  message: String!
}
